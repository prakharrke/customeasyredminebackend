package manager;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import com.google.gson.Gson;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

public class Test {
	static String issues = "173360,173355,173353,173348,173347,173344,173342,173332,173331,173328,173318,173310,173291,173273,173266,173264,173249,173239,173225,173219,173213,173212,173211,173209,173191,173174,173169,173168,173163,173153,173149,173148,173147,173145,173144,173134,173133,173132,173131,173126,173125,173124,173121,173109,173107,173093,173085,173074,173068,173040,173039,173037,173035,173033,173030,173016,173014,173011,173010,172981,172947,172941,172930,172908,172907,172905,172902,172898,172887,172879,172871,172870,172838,172837,172830,172829,172827,172822,172821,172819,172815,172790,172788,172774,172770,172769,172759,172747,172745,172744,172738,172730,172709,172696,172679,172670,172667,172665,172664,172662,172661,172656,172655,172652,172647,172645,172643,172642,172638,172637,172632,172631,172609,172605,172601,172598,172597,172594,172585,172583,172578,172570,172567,172562,172550,172541,172540,172535,172525,172524,172516,172505,172502,172501,172499,172497,172494,172467,172460,172456,172454,172436,172416,172357,172331,172325,172320,172314,172303,172299,172227,172224,172221,172210,172199,172196,172180,172172,172133,172113,172110,172109,172105,172104,172096,172088,172080,172040,172024,172021,172012,172010,172009,172008,172007,172006,172005,172004,172001,172000,171995,171990,171988,171987,171986,171985,171971,171969,171968,171967,171962,171961,171960,171957,171953,171952,171951,171942,171938,171937,171932,171916,171913,171909,171891,171888,171881,171862,171849,171842,171839,171830,171827,171817,171815,171759,171757,171756,171755,171750,171745,171741,171740,171739,171734,171729,171728,171723,171719,171717,171716,171715,171712,171707,171697,171691,171687,171684,171679,171672,171668,171666,171664,171661,171629,171622,171619,171615,171613,171605,171604,171603,171600,171582,171581,171575,171571,171570,171566,171563,171562,171547,171540,171538,171526,171520,171517,171516,171514,171513,171507,171505,171493,171491,171490,171489,171488,171484,171450,171449,171448,171446,171441,171436,171427,171414,171411,171408,171402,171398,171389,171387,171382,171377,171375,171373,171367,171365,171346,171345,171334,171333,171310,171309,171308,171291,171286,171285,171282,171278,171275,171274,171272,171271,171270,171268,171267,171266,171257,171250,171245,171241,171239,171238,171229,171225,171214,171191,171174,171173,171168,171151,171086,171084,171083,171082,171080,171079,171078,171064,171056,171038,171031,171026,171023,171009,171008,171005,170995,170994,170989,170983,170981,170980,170978,170975,170974,170972,170971,170968,170959,170958,170957,170956,170924,170907,170906,170905,170902,170900,170892,170890,170889,170886,170885,170877,170876,170875,170874,170869,170864,170862,170861,170859,170858,170857,170852,170846,170845,170844,170833,170756,170749,170748,170745,170742,170740,170699,170693,170689,170688,170670,170660,170658,170655,170654,170625,170623,170618,170613,170597,170595,170594,170590,170570,170548,170516,170515,170501,170499,170497,170496,170495,170493,170485,170482,170480,170469,170428,170419,170414,170400,170399,170391,170390,170385,170382,170380,170372,170368,170364,170362,170350,170342,170341,170337,170320,170303,170302,170301,170286,170280,170278,170250,170248,170240,170209,170200,170199,170198,170188,170184,170183,170176,170136,170115,170100,170098,170092,170077,170076,170072,170052,170051,170047,170046,170039,170038,170030,170024,170018,170011,170010,170009,170007,170006,170003,170001,169998,169992,169991,169988,169982,169974,169949,169946,169935,169926,169918,169905,169902,169894,169889,169888,169887,169885,169875,169873,169872,169870,169868,169867,169862,169861,169849,169840,169838,169837,169833,169828,169826,169824,169823,169822,169820,169814,169809,169801,169799,169798,169795,169790,169778,169777,169774,169772,169750,169739,169721,169718,169717,169715,169712,169706,169704,169677,169664,169655,169623,169579,169563,169545,169544,169506,169503,169498,169494,169489,169477,169474,169466,169458,169457,169453,169450,169447,169440,169439,169423,169394,169379,169375,169373,169369,169366,169354,169352,169351,169346,169341,169303,169299,169298,169295,169290,169285,169278,169277,169276,169273,169251,169245,169244,169230,169229,169228,169225,169212,169209,169201,169191,169189,169176,169172,169166,169162,169148,169143,169138,169124,169119,169109,169108,169103,169094,169034,169026,169024,169021,169013,169010,169007,169002,168994,168983,168973,168967,168964,168961,168958,168947,168942,168939,168934,168929,168928,168921,168880,168846,168841,168840,168837,168833,168831,168830,168829,168828,168800,168791,168743,168740,168736,168732,168730,168729,168720,168709,168642,168639,168629,168628,168626,168615,168610,168604,168599,168595,168594,168585,168584,168582,168581,168577,168525,168521,168519,168509,168508,168503,168496,168492,168475,168458,168439,168425,168423,168414,168412,168411,168410,168409,168393,168370,168367,168364,168363,168355,168347,168346,168341,168329,168328,168308,168293,168285,168267,168265,168234,168227,168221,168218,168211,168208,168204,168201,168197,168190,168188,168187,168184,168171,168160,168156,168152,168146,168144,168140,168122,168114,168110,168084,168082,168077,168075,168074,168071,168070,168065,168059,168058,168056,168055,168054,168052,168051,168049,168045,168044,168043,168039,168035,168033,168032,168026,168018,168007,168003,167995,167952,167948,167944,167942,167936,167933,167926,167923,167921,167912,167902,167901,167900,167879,167877,167871,167868,167864,167861,167860,167858,167857,167854,167844,167843,167820,167814,167808,167785,167762,167760,167758,167716,167710,167702,167701,167700,167680,167669,167667,167665,167617,167580,167577,167576,167552,167551,167540,167485,167481,167422,167364,167345,167342,167306,167301,167299,167298,167275,167270,167263,167237,167234,167223,167220,167219,167218,167216,167214,167211,167208,167205,167201,167200,167198,167196,167190,167189,167180,167175,167174,167167,167161,167157,167124,167118,167114,167100,167090,167085,167083,167078,167067,167056,167054,167049,167039,167004,166997,166994,166953,166925,166902,166892,166838,166833,166814,166802,166800,166794,166793,166788,166784,166780,166761,166725,166722,166718,166710,166705,166703,166702,166699,166697,166695,166693,166692,166685,166683,166682,166671,166668,166661,166657,166642,166637,166626,166586,166567,166564,166548,166545,166536,166494,166489,166481,166435,166372,166359,166357,166353,166351,166314,166312,166309,166308,166289,166286,166283,166281,166278,166277,166273,166255,166200,166147,166133,166066,166060,166052,166038,166007,166006,165998,165980,165971,165951,165939,165938,165930,165929,165878,165876,165834,165820,165818,165815,165807,165805,165797,165796,165749,165747,165742,165738,165737,165733,165729,165717,165713,165710,165706,165598,165589,165587,165571,165559,165557,165550,165544,165542,165532,165530,165529,165515,165508,165501,165486,165481,165300,165296,165294,165293,165284,165280,165272,165245,165239,165201,165177,165174,165173,165171,165167,165149,165147,165146,165145,165144,165143,165141,165140,165137,165135,165133,165129,165126,165115,165100,165098,165097,165072,165070,165062,165054,165051,165046,165042,165037,165035,165033,165031,165026,165021,165015,165011,165001,164982,164975,164971,164949,164923,164911,164907,164905,164898,164878,164875,164854,164845,164841,164826,164823,164792,164790,164783,164772,164762,164749,164719,164718,164715,164650,164627,164626,164595,164579,164561,164543,164537,164524,164518,164502,164486,164476,164429,164348,164341,164320,164318,164315,164314,164312,164251,164248,164234,164163,164161,164142,164122,164098,164060,164057,164054,164049,164044,164037,164036,164024,164021,163985,163984,163981,163975,163960,163957,163955,163949,163902,163884,163882,163848,163809,163793,163790,163775,163767,163741,163740,163739,163735,163701,163696,163690,163683,163674,163663,163662,163652,163648,163641,163609,163598,163585,163581,163571,163570,163565,163564,163557,163509,163501,163496,163484,163468,163466,163465,163463,163462,163460,163458,163450,163444,163434,163430,163415,163412,163410,163380,163365,163347,163339,163336,163333,163332,163325,163322,163310,163307,163290,163268,163264,163257,163246,163245,163238,163235,163230,163228,163191,163189,163188,163185,163180,163178,163171,163162,163161,163154,163150,163149,163137,163135,163131,163112,163109,163100,163061,163053,163050,163048,163044,163037,163036,163033,163031,163028,163027,163025,163023,163016,162924,162900,162892,162870,162522,162492,162490,162420,162392,160632,160493,160030,158922,126956";
	
	public static void main(String args[]) throws IOException {
		
		String[] issuesArray = issues.split(",");
		
		//System.out.println(issuesArray[5]);
		String url = "https://eqbugtrackin01.1eq.com/redmine/issues/".trim();
		
		for(String i : issuesArray) {
			String currUrl = (url + i.trim() + ".json?include=journals".trim()).trim();
			URL urlObject = new URL(currUrl);
			HttpURLConnection con = (HttpURLConnection) urlObject.openConnection();
			
			//String basicAuth = "Basic " + new String(Base64.getEncoder().encode(userCredentials.getBytes()));
			String basicAuth = "Basic bWFoZXNoOk1haDE2QGVxMg==";
			con.setRequestProperty ("Authorization", basicAuth);
			con.setRequestMethod("GET");
			
			int responseCode = con.getResponseCode();
			
			if(responseCode!=500) {
			//System.out.println("\nSending 'GET' request to URL : " + url);
			//System.out.println("Response Code : " + responseCode);

			BufferedReader in = new BufferedReader(
			        new InputStreamReader(con.getInputStream()));
			String inputLine;
			StringBuffer response = new StringBuffer();

			while ((inputLine = in.readLine()) != null) {
				response.append(inputLine);
			}
			in.close();
			
			JSONObject respo = new Gson().fromJson(response.toString(), JSONObject.class);
			JSONObject issue = respo.getJSONObject("issue");
			String issueID = issue.getString("id");
			JSONArray journals = issue.getJSONArray("journals");
			
			for(int j=0;j<journals.size(); j++) {
				JSONObject journal = journals.getJSONObject(j);
				try {
				String notes = journal.getString("notes");
				if(notes.toLowerCase().contains("known issue") || notes.toLowerCase().contains("faq") || notes.toLowerCase().contains("knownissue")) {
					System.out.println(issueID);
				}
				}catch(Exception e) {
					
				}
			}
			
			JSONArray customFields = issue.getJSONArray("custom_fields");
			for(int k=0;k<customFields.size();k++) {
				
				JSONObject customField = customFields.getJSONObject(k);
				String customID = customField.getString("id");
				if(customID.equalsIgnoreCase("168.0") && (customField.getString("value").toLowerCase().equalsIgnoreCase("Known Issue") || customField.getString("value").toLowerCase().equalsIgnoreCase("FAQ"))) {
					System.out.println("FOR FAQ BLOCK " + issueID);
				}
			}
			
			

			
			
			
			
		}
		
	
		}
	}

}
